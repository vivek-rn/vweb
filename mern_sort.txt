#####MERN Sort operation:
###Backend
const express = require('express');
const cors = require('cors');
const app = express();
const port = 5000;

app.use(cors());

// Sample data (replace with your data source)
const items = [
  { id: 1, name: 'Item 1', category: 'Category A' },
  { id: 2, name: 'Item 2', category: 'Category B' },
  // Add more items here
];

// Sort operation
app.get('/sort', (req, res) => {
  const sortBy = req.query.sortBy;
  if (!sortBy) {
    res.status(400).json({ error: 'sortBy parameter is required' });
    return;
  }

  const sortedItems = [...items];
  sortedItems.sort((a, b) => a[sortBy].localeCompare(b[sortBy]));

  res.json(sortedItems);
});

app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});


###Frontend
import React, { useState } from 'react';
import axios from 'axios';

function App() {
  const [sortedItems, setSortedItems] = useState([]);
  const [sortBy, setSortBy] = useState('');

  const handleSort = () => {
    if (!sortBy) {
      alert('Please select a sorting option.');
      return;
    }

    axios.get(`/sort?sortBy=${sortBy}`)
      .then(response => setSortedItems(response.data))
      .catch(error => console.error('Error sorting:', error));
  };

  return (
    <div className="App">
      <h1>Sort Operation Example</h1>
      <select onChange={e => setSortBy(e.target.value)}>
        <option value="">Select Sorting</option>
        <option value="name">Sort by Name</option>
        <option value="category">Sort by Category</option>
      </select>
      <button onClick={handleSort}>Sort</button>
      <ul>
        {sortedItems.map(item => (
          <li key={item.id}>
            {item.name} - {item.category}
          </li>
        ))}
      </ul>
    </div>
  );
}

export default App;
