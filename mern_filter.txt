#####MERN Filter operation:
###Backend
const express = require('express');
const cors = require('cors');
const app = express();
const port = 5000;

app.use(cors());

// Sample data (replace with your data source)
const items = [
  { id: 1, name: 'Item 1', category: 'Category A' },
  { id: 2, name: 'Item 2', category: 'Category B' },
  // Add more items here
];

// Filter operation
app.get('/filter', (req, res) => {
  const filterBy = req.query.filterBy;
  if (!filterBy) {
    res.status(400).json({ error: 'filterBy parameter is required' });
    return;
  }

  const filteredItems = items.filter(item => item.category === filterBy);

  res.json(filteredItems);
});

app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});

###Frontend
import React, { useState } from 'react';
import axios from 'axios';

function App() {
  const [filterResults, setFilterResults] = useState([]);
  const [filterBy, setFilterBy] = useState('');

  const handleFilter = () => {
    if (!filterBy) {
      alert('Please select a filtering option.');
      return;
    }

    axios.get(`/filter?filterBy=${filterBy}`)
      .then(response => setFilterResults(response.data))
      .catch(error => console.error('Error filtering:', error));
  };

  return (
    <div className="App">
      <h1>Filter Operation Example</h1>
      <select onChange={e => setFilterBy(e.target.value)}>
        <option value="">Select Filtering</option>
        <option value="Category A">Category A</option>
        <option value="Category B">Category B</option>
      </select>
      <button onClick={handleFilter}>Filter</button>
      <ul>
        {filterResults.map(item => (
          <li key={item.id}>
            {item.name} - {item.category}
          </li>
        ))}
      </ul>
    </div>
  );
}

export default App;
-----------------------------------------------------------------------------
------server:
const express = require('express');
const cors = require('cors');
const app = express();
const port = 3001; // You can choose any port you prefer

app.use(cors());
app.use(express.json());

// Sample data (you can replace this with your own data source)
const products = [
  { id: 1, name: 'Product ABC', category: 'Category A' },
  { id: 2, name: 'Product XYZ', category: 'Category B' },
  { id: 3, name: 'Another ABC Product', category: 'Category A' },
  // Add more products here
];

// Search products with regex
app.get('/api/products/regex', (req, res) => {
  const { search } = req.query;
  const regex = new RegExp(search, 'i'); // Case-insensitive regex

  const filteredProducts = products.filter((product) => regex.test(product.name));

  res.json(filteredProducts);
});

// Search products without regex
app.get('/api/products/no-regex', (req, res) => {
  const { search } = req.query;

  const filteredProducts = products.filter((product) =>
    product.name.toLowerCase().includes(search.toLowerCase())
  );

  res.json(filteredProducts);
});

app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});


-----client:
import React, { useState } from 'react';
import axios from 'axios';

function ProductList() {
  const [search, setSearch] = useState('');
  const [products, setProducts] = useState([]);
  const [regexProducts, setRegexProducts] = useState([]);

  const handleSearch = async () => {
    try {
      const response = await axios.get(
        `/api/products/no-regex?search=${search}`
      );
      setProducts(response.data);

      const regexResponse = await axios.get(
        `/api/products/regex?search=${search}`
      );
      setRegexProducts(regexResponse.data);
    } catch (error) {
      console.error(error);
    }
  };

  return (
    <div>
      <h2>Product List</h2>
      <input
        type="text"
        placeholder="Search by name"
        value={search}
        onChange={(e) => setSearch(e.target.value)}
      />
      <button onClick={handleSearch}>Search</button>
      <h3>Without Regex</h3>
      <ul>
        {products.map((product) => (
          <li key={product.id}>{product.name}</li>
        ))}
      </ul>
      <h3>With Regex</h3>
      <ul>
        {regexProducts.map((product) => (
          <li key={product.id}>{product.name}</li>
        ))}
      </ul>
    </div>
  );
}

export default ProductList;
